<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="aip.common.report.ReportDTO" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Integer">
            <column name="ID" />
            <generator class="assigned"/>
        </id>
        <property name="reportName" type="java.lang.String">
            <column name="ReportName"/>
        </property>
        <property name="createDate" type="java.lang.String">
            <column name="CreateDate"/>
        </property>
        <property name="creatorFullname" type="java.lang.String">
            <column name="UserName"/>
        </property>
        <property name="isVisual" type="java.lang.Boolean">
            <column name="IsVisual"/>
        </property>
        <property name="isPublic" type="java.lang.Boolean">
            <column name="IsPublic"/>
        </property>
    </class>
 	<sql-query name="sqlGetUserReports" read-only="true">
    	<return class="aip.common.report.ReportDTO">
    	</return>
		 select * from bireport where UserName=? 
    </sql-query>    
    <sql-query name="spBIGetReports" callable="true">
	    <return class="aip.common.report.ReportDTO">
	    </return>
		{call spBIGetReports(?,?,?,?,?)}    
    </sql-query>
    <sql-query name="spBIGetReportsCount" callable="true">
		{call spBIGetReportsCount(?,?)}    
    </sql-query>

    <sql-query name="spBIGetMDXReports" callable="true">
	    <return class="aip.common.report.ReportDTO">
	    </return>
		{call spBIGetMDXReports(?,?,?,?,?)}    
    </sql-query>
    <sql-query name="spBIGetMDXReportsCount" callable="true">
		{call spBIGetMDXReportsCount(?,?)}    
    </sql-query>

    <sql-query name="spBIGetVisualReports" callable="true">
	    <return class="aip.common.report.ReportDTO">
	    </return>
		{call spBIGetVisualReports(?,?,?,?,?)}    
    </sql-query>
    <sql-query name="spBIGetVisualReportsCount" callable="true">
		{call spBIGetVisualReportsCount(?,?)}    
    </sql-query>

</hibernate-mapping>
