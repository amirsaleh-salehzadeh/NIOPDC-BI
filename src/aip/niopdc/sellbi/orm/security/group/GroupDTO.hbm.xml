<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="aip.common.security.group.GroupDTO" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Integer">
            <column name="ID" />
            <generator class="assigned" />
        </id>
		<one-to-one name="ent" class="aip.common.security.group.GroupENT"
		foreign-key="ID"></one-to-one>
        
        <loader query-ref="sqlGetGroupDTO"/>
    </class>
    <sql-query name="sqlGetGroupDTO">
    <return class="aip.common.security.group.GroupDTO" lock-mode="read"></return>
		select g.*,GROUP_CONCAT(distinct gr.F_SCRoleID SEPARATOR ',')
		from scgroup g
		left join scgrouprole gr on gr.F_SCGroupID = g.ID 
		where g.ID = ?
		group by g.ID
    </sql-query>

    <sql-query name="sqlGetGroupRoles">
   		select GROUP_CONCAT(distinct r.F_SCRoleID SEPARATOR ',') 
		from scgrouprole r 
		where r.F_SCGroupID=? 	
    
    </sql-query>
    
   <sql-query name="spSECGetGroups" callable="true">
    	<return class="aip.common.security.group.GroupDTO">
    	</return>
		 {call spSECGetGroups(?,?,?,?)}
    </sql-query>
    
   <sql-query name="spSECGetGroupsCount" callable="true">
		 {call spSECGetGroupsCount(?)}
    </sql-query>
    
    <sql-query name="sqlGetRoleIds">
    select gr.F_SCRoleID
    from scgrouprole gr
    where gr.F_SCGroupID=?
    </sql-query>

   <sql-query name="spSECGetUserGroups" callable="true">
    	<return class="aip.common.security.group.GroupDTO">
    	</return>
		 {call spSECGetUserGroups(?)}
    </sql-query>
    
</hibernate-mapping>
