/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package aip.niopdc.sellbi.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import aip.tag.tree.AIPTree;
import aip.tag.tree.TreeNodeTypeEnum;
import aip.util.NVL;
import aip.util.UTF8;
import aip.xmla.AIPOlap;

import com.tonbeller.jpivot.olap.model.OlapException;
import com.tonbeller.jpivot.xmla.XMLA_OlapItem;
import com.tonbeller.jpivot.xmla.XMLA_SOAP;
import org.apache.axis.encoding.Base64;

/** 
 * MyEclipse Struts
 * Creation date: 09-26-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class MembersWithCheckAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("utf8");
		response.setHeader("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">", "");
		response.setContentType("text/html");
		
		String _User ="";
		String _Password="";
		String nodeType = NVL.getString(request.getParameter("nodeType"), "DEFAULT");
		try {
			XMLA_SOAP xmla_soap=new XMLA_SOAP(AIPOlap.getDataSourceURI(),_User,_Password);
			
			String reqCode = NVL.getEmptyString(request.getParameter("reqCode"),"dimensions");
			String id=UTF8.cnvUTF8( request.getParameter("id") );
			//String id=request.getParameter("id") ;
			System.out.println("Members2Action.execute():reqCode="+reqCode+",querystring="+ request.getQueryString());
			PrintWriter out = response.getWriter();
			String text="", url,oid="",name="";
			
			//String nodeType = NVL.getString(request.getParameter("nodeType"), "DEFAULT");
			if("dimensions".equalsIgnoreCase(reqCode)){
				List<XMLA_OlapItem> lstDimensions=null;
				lstDimensions=xmla_soap.discoverDim( AIPOlap.getCatalog(), AIPOlap.getCubeName());

				for (XMLA_OlapItem dim : lstDimensions) {
					oid = dim.getUniqueName();
					text = dim.getCaption();
					url = "memberswithcheck.do?reqCode=dimension&id="+oid;
					AIPTree.appendTreeNode(out, text, url, "",oid);
				}			
			}else if("dimension".equalsIgnoreCase(reqCode)){
				List<XMLA_OlapItem> lstHierarchies=null;
				lstHierarchies=xmla_soap.discoverHier(AIPOlap.getCatalog(),AIPOlap.getCubeName(), id);

				for (XMLA_OlapItem hierarchy : lstHierarchies) {
					oid = hierarchy.getUniqueName();
					name = hierarchy.getCaption();
					text = hierarchy.getCaption();
					url = "memberswithcheck.do?reqCode=hierarchy&id="+oid+"&dim="+id;//+"&uniquename="+name;
					AIPTree.appendTreeNode(out, text, url, "addVisualFormField(this,'"+name+"');",oid);
				}			
			}else if("hierarchy".equalsIgnoreCase(reqCode)){
				List<XMLA_OlapItem> lstMembers=null;
				lstMembers=xmla_soap.discoverMemTree(AIPOlap.getCatalog(),AIPOlap.getCubeName(), id+".[All]",1);
				for (XMLA_OlapItem member : lstMembers) {
					oid = member.getUniqueName().replaceAll("&", "%26");
					text = member.getCaption();
					url = "memberswithcheck.do?reqCode=member&id="+oid+"&parent="+id+".[همه]"+"&nodeType="+nodeType;
					System.out.println("Members2Action.execute():url="+url);
					//AIPTree.appendTreeNode(out, text, url, "",oid);
//					String myId =  member.getUniqueName();
//					myId = myId.replace(".", "_").replace("&", "%26").replace("[", "_").replace("]", "_");


//					String ss = Base64.encode(member.getUniqueName().getBytes());
//					ss=ss.replaceAll("=","_");
//					ss=ss.replaceAll("/","_");

					AIPTree.appendTreeNode(out, text, oid, url, "treeCheckChanged(this)", TreeNodeTypeEnum.valueOf(nodeType.toUpperCase()));
				}			
			}else if("member".equalsIgnoreCase(reqCode)){
				List<XMLA_OlapItem> lstMembers=null;
				System.out.println("Members2Action.execute():parent="+id);
				lstMembers=xmla_soap.discoverMemTree(AIPOlap.getCatalog(),AIPOlap.getCubeName(), id,1);
				for (XMLA_OlapItem member : lstMembers) {
					oid = member.getUniqueName().replaceAll("&", "%26");;
					text = member.getCaption();
					url = "memberswithcheck.do?reqCode=member&id="+oid+"&parent="+id+"&nodeType="+nodeType;
					System.out.println("Members2Action.execute():url="+url);
					//AIPTree.appendTreeNode(out, text, url, "",oid);
					
//					String ss = Base64.encode(member.getUniqueName().getBytes());
//					ss=ss.replaceAll("=","_");
//					ss=ss.replaceAll("/","_");

					AIPTree.appendTreeNode(out, text, oid, url, "treeCheckChanged(this)", TreeNodeTypeEnum.valueOf(nodeType.toUpperCase()));
				}			
			}else{
			}
		} catch (IOException e) {
			e.printStackTrace();
		} catch (OlapException e) {
			e.printStackTrace();
		}
		
		return null;
	}
}